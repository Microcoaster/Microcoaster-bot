/**
 * Gestionnaire de l'√©v√©nement "channelDelete".
 *
 * Ce module est d√©clench√© lorsqu'un salon Discord est supprim√©.
 * Il v√©rifie si c'√©tait un salon de ticket et le supprime de la base de donn√©es.
 */

const TicketDAO = require("../dao/ticketDAO");
const ticketDAO = new TicketDAO();

module.exports = {
  name: "channelDelete",
  /**
   * M√©thode ex√©cut√©e lors de la suppression d'un salon
   *
   * @param {Channel} channel - Le salon qui a √©t√© supprim√©
   */
  async execute(channel) {
    try {
      // V√©rifier si c'√©tait un salon de ticket
      const ticket = await ticketDAO.getTicketByChannelId(channel.id);

      if (ticket) {
        console.log(
          `\x1b[38;5;3müóëÔ∏è  Salon de ticket supprim√© d√©tect√©: ${channel.name} (${channel.id})\x1b[0m`,
        );
        console.log(
          `\x1b[38;5;3müìã Ticket associ√©: ${ticket.ticket_id}\x1b[0m`,
        );

        // Supprimer le ticket de la base de donn√©es
        const deleted = await ticketDAO.deleteTicketByChannelId(channel.id);

        if (deleted) {
          console.log(
            `\x1b[38;5;2m‚úÖ Ticket ${ticket.ticket_id} supprim√© de la base de donn√©es\x1b[0m`,
          );
        } else {
          console.log(
            `\x1b[38;5;1m‚ùå √âchec de la suppression du ticket ${ticket.ticket_id} de la base de donn√©es\x1b[0m`,
          );
        }
      }
    } catch (error) {
      console.error(
        `\x1b[38;5;1m‚ùå Erreur lors de la gestion de la suppression du salon ${channel.id}: ${error.message}\x1b[0m`,
      );
    }
  },
};
